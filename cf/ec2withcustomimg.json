{
    "AWSTemplateFormatVersion" : "2010-09-09",
  
    "Description" : "Example AWS CloudFormation template that ingests a custom private AMI into a virtual machine. ",
  
    "Parameters" : {
      "KeyName": {
        "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
        "Type": "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
      },
      "InstanceType" : {
        "Description" : "WebServer EC2 instance type",
        "Type" : "String",
        "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
        "ConstraintDescription" : "must be a valid EC2 instance type."
      },
      "ImageId" : {
        "Description" : "Id of custom AMI that will be used to instantiate this WebServer EC2 instance",
        "Type" : "String"
      },
      "SSHLocation": {
        "Description": "The IP address range that can be used to SSH to the EC2 instances",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
      },

      "VpcId": {
        "Description": "The id of the non-default VPC being used.",
        "Type": "AWS::EC2::VPC::Id"
      },

      "RouteTableId": {
        "Description": "Id of the route table that will connect the VM created in this template to the outside world.",
        "Type" : "String"
      },

      "AvailabilityZone": {
        "Description": "The availability zone in which the subnet will be created.",
        "Type" : "String"
      },

      "CidrBlock": {
        "Description": "The Cidr for the Subnet.",
        "Type" : "String"
      }

    },
  
    "Resources" : {
      "WebServerSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "VpcId" : { "Ref" : "VpcId" },
          "GroupDescription" : "Enable SSH access",
          "SecurityGroupIngress" : [
            {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
          ]
        }
      },
      "mySubnet" : {
        "Type" : "AWS::EC2::Subnet",
        "Properties" : {
           "VpcId" : { "Ref" : "VpcId" },
           "AvailabilityZone" : { "Ref" : "AvailabilityZone"},
           "MapPublicIpOnLaunch" : true,
           "CidrBlock" : { "Ref": "CidrBlock" }
        }
      },
      "mySubnetRouteTableAssociation" : {
        "Type" : "AWS::EC2::SubnetRouteTableAssociation",
        "Properties" : {
           "SubnetId" : { "Ref" : "mySubnet" },
           "RouteTableId" : { "Ref" : "RouteTableId"}
        }
      },
      "WebServer": {
        "Type" : "AWS::EC2::Instance",
        "Properties": {
          "ImageId" : { "Ref" : "ImageId"  },
          "InstanceType"   : { "Ref" : "InstanceType" },
          "SubnetId": { "Fn::GetAtt" : [ "mySubnet", "SubnetId" ] },
          "SecurityGroupIds" : [ { "Fn::GetAtt" : [ "WebServerSecurityGroup", "GroupId" ] } ],
          "KeyName"        : { "Ref" : "KeyName" }
        },
        "DependsOn" : "mySubnet"
      }
    }
  }